q
proc
&proc
c
route.pattern
req.fullpath
q
clear
q
req.request_method
route.http_method
q
req.request_method
req.request
req
q
action_name
controller_class
method
pattern
q
@action_name
q
ControllerBase.new(@req, @res)
Contloller.new(@req, @res)
Controller.new
@controller_class
Controller.new(@controller_class)
Controller.new(controller_class)
res.methods
res
q
req.fullpath =~ @pattern
req.fullpath =~ @pattern.to_s
@pattern
req.fullpath
req.fullpath =~ @pattern
req.request_method == @http_method.to_s.upcase
@http_method.to_s.upcase
@http_method.to_s.capitalize
req.request_method
@http_method
req.request_method == @http_method
req.fullpath
req.methods
req.method
req
req.request_path
req.request_method
q
@action_name
@controller_class
@http_method
@pattern
q
@ds_cookie
q
req
q
@ds_cookie
q
req
q
req.env["rack.request.cookie_hash"]["_rails_lite_app"]
req.env["rack.request.cookie_hash"]
req.env
req.env.rack.request.cookie_hash
req.env
@env
req.request_cookie_hash
req
q
render_content(bound, 'text/html')
c
q
n
quit
exit
continue
n
s
q
f.read
f
q
final_dir
q
final_dir
q
controller_name
q
snaked
q
controller_name
q
controller_name
q
self.class
q
x
q
@res
q
@res
content_type
